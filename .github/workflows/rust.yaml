name: Rust

on:
  push:
  release:
    types: [created]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Build Rust with Cargo on Linux
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest, windows-2022, macos-11]
        rust: [stable, nightly]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Build
      run: cargo build --verbose
    - name: Build examples
      run: cargo build --examples --verbose
    - name: Run tests
      run: cargo test --verbose

  build-macos:
    name: Build Rust with Cargo on Mac OS X
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-2022, macos-11]
        rust: [stable, nightly]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Build
      run: cargo build --verbose
    - name: Build examples
      run: cargo build --examples --verbose
    - name: Run tests
      run: cargo test --verbose

  build-windows:
    name: Build Rust with Cargo on Windows
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, windows-latest]
        rust: [stable, nightly]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Build
      run: cargo build --verbose
    - name: Build examples
      run: cargo build --examples --verbose
    - name: Run tests
      run: cargo test --verbose

  build_success:
    name: Build Rust with Cargo - All environments
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
    - run: echo Done!

  publish:
    name: Publish tagged release on crates.io
    if: github.event_name == 'release' && github.event.action == 'created'
    needs:
      - build_success
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: katyo/publish-crates@v1
      with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
